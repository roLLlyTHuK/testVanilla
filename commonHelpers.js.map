{"version":3,"file":"commonHelpers.js","sources":["../src/partials/js/firebase-auth.js","../src/main.js"],"sourcesContent":["import { initializeApp } from 'firebase/app';\nimport {\n  getAuth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  onAuthStateChanged,\n  signOut,\n  deleteUser,\n} from 'firebase/auth';\nimport { getDatabase, ref, set, get, remove } from 'firebase/database';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyCSIOIvaBcm09OifpCpfKPAwnfy_t377rM',\n  authDomain: 'testfirebase-422a2.firebaseapp.com',\n  databaseURL:\n    'https://testfirebase-422a2-default-rtdb.europe-west1.firebasedatabase.app',\n  projectId: 'testfirebase-422a2',\n  storageBucket: 'testfirebase-422a2.appspot.com',\n  messagingSenderId: '589688307018',\n  appId: '1:589688307018:web:e010a81c7decb75d56d5b3',\n};\n\nconst app = initializeApp(firebaseConfig);\nconst db = getDatabase(app);\nconst auth = getAuth(app);\nconst emailInput = document.getElementById('email');\nconst passwordInput = document.getElementById('password');\nconst signOutButton = document.getElementById('signOut');\nlet isAuth = false;\n\nfunction loginUser() {\n  const email = emailInput.value;\n  const password = passwordInput.value;\n\n  signInWithEmailAndPassword(auth, email, password)\n    .then(userCredential => {\n      alert('Вход успешен');\n      signOutButton.style.display = 'block';\n      isAuth = true;\n    })\n    .catch(error => {\n      alert(`Ошибка входа: ${error.message}`);\n    });\n}\n\nfunction createAccaunt() {\n  const email = emailInput.value;\n  const password = passwordInput.value;\n\n  createUserWithEmailAndPassword(auth, email, password)\n    .then(userCredential => {\n      alert('Регистрация успешна');\n      signOutButton.style.display = 'block';\n      isAuth = true;\n    })\n    .catch(error => {\n      alert(`Ошибка регистрации: ${error.message}`);\n    });\n}\n\nfunction deleteAccount() {\n  const user = auth.currentUser;\n\n  if (user) {\n    deleteUser(user)\n      .then(() => {\n        alert('Аккаунт удален');\n        signOutButton.style.display = 'none';\n        isAuth = false;\n      })\n      .catch(error => {\n        alert(`Ошибка при удалении аккаунта: ${error.message}`);\n      });\n  } else {\n    alert('Пользователь не вошел в систему');\n  }\n}\n\nfunction logOutUser() {\n  signOut(auth).then(() => {\n    alert('Выход выполнен успешно');\n    signOutButton.style.display = 'none';\n    isAuth = false;\n  });\n}\nlet userID = '';\nonAuthStateChanged(auth, user => {\n  if (user) {\n    userID = user.uid; // Получаем идентификатор пользователя\n    console.log('Пользователь вошел в систему. ID пользователя:', userID);\n\n    // Вы можете передать userId в другие функции для работы с базой данных\n    // Например, для создания подкаталога с именем пользователя и хранения данных.\n  } else {\n    console.log('Пользователь вышел из системы.');\n  }\n});\n\nasync function readData() {\n  const dataRef = ref(db, `shoppingList/${userID}`);\n  try {\n    const snapshot = await get(dataRef);\n    if (snapshot.exists()) {\n      return snapshot.val();\n    } else {\n      return null; // Нет данных в базе\n    }\n  } catch (error) {\n    console.error('Ошибка при чтении данных:', error);\n    throw error;\n  }\n}\n\n// Функция для создания записи в базе данных\nasync function createItem(item) {\n  const dataRef = ref(db, 'shoppingList');\n  try {\n    await set(dataRef, item);\n    console.log('Запись успешно создана');\n  } catch (error) {\n    console.error('Ошибка при создании записи:', error);\n    throw error;\n  }\n}\nasync function createItemForUser(item) {\n  const userShoppingListRef = ref(db, `shoppingList/${userID}`);\n\n  try {\n    await set(userShoppingListRef, item);\n    console.log('Запись успешно создана для пользователя:', userID);\n  } catch (error) {\n    console.error('Ошибка при создании записи:', error);\n    throw error;\n  }\n}\n// Функция для удаления записи из базы данных\nasync function deleteItem() {\n  const dataRef = ref(db, 'shoppingList');\n  try {\n    await remove(dataRef);\n    console.log('Запись успешно удалена');\n  } catch (error) {\n    console.error('Ошибка при удалении записи:', error);\n    throw error;\n  }\n}\n\nexport {\n  db,\n  isAuth,\n  loginUser,\n  logOutUser,\n  createAccaunt,\n  deleteAccount,\n  signOutButton,\n  readData,\n  createItem,\n  createItemForUser,\n  deleteItem,\n};\n","import {\n  isAuth,\n  loginUser,\n  logOutUser,\n  createAccaunt,\n  deleteAccount,\n  signOutButton,\n  readData,\n  createItem,\n  createItemForUser,\n  deleteItem,\n} from '/partials/js/firebase-auth';\n\nconst loginButton = document.getElementById('login');\nconst registerButton = document.getElementById('register');\nconst deleteAccountButton = document.getElementById('deleteAccount');\n\nloginButton.addEventListener('click', loginUser);\n\nregisterButton.addEventListener('click', createAccaunt);\n\ndeleteAccountButton.addEventListener('click', deleteAccount);\n\nsignOutButton.addEventListener('click', logOutUser);\n\nconst readDataButton = document.getElementById('readData');\nconst createItemButton = document.getElementById('createItem');\nconst deleteItemButton = document.getElementById('deleteItem');\nconst outputDiv = document.getElementById('output');\n\n// Слушаем события на кнопках\nreadDataButton.addEventListener('click', async () => {\n  if (isAuth) {\n    try {\n      const data = await readData();\n      if (data) {\n        outputDiv.textContent = JSON.stringify(data, null, 2);\n      } else {\n        outputDiv.textContent = 'Нет данных в базе';\n      }\n    } catch (error) {\n      outputDiv.textContent = 'Ошибка при чтении данных: ' + error.message;\n    }\n  } else {\n    outputDiv.textContent = 'Пользователь не вошел в систему';\n  }\n});\n\ncreateItemButton.addEventListener('click', async () => {\n  if (isAuth) {\n    const newItem = { name: 'Новый продукт', quantity: 1 };\n    try {\n      await createItemForUser(newItem);\n      outputDiv.textContent = 'Запись успешно создана';\n    } catch (error) {\n      outputDiv.textContent = 'Ошибка при создании записи: ' + error.message;\n    }\n  } else {\n    outputDiv.textContent = 'Пользователь не вошел в систему';\n  }\n});\n\ndeleteItemButton.addEventListener('click', async () => {\n  if (isAuth) {\n    try {\n      await deleteItem();\n      outputDiv.textContent = 'Запись успешно удалена';\n    } catch (error) {\n      outputDiv.textContent = 'Ошибка при удалении записи: ' + error.message;\n    }\n  } else {\n    outputDiv.textContent = 'Пользователь не вошел в систему';\n  }\n});\n"],"names":["firebaseConfig","app","initializeApp","db","getDatabase","auth","getAuth","emailInput","passwordInput","signOutButton","isAuth","loginUser","email","password","signInWithEmailAndPassword","userCredential","error","createAccaunt","createUserWithEmailAndPassword","deleteAccount","user","deleteUser","logOutUser","signOut","userID","onAuthStateChanged","readData","dataRef","ref","snapshot","get","createItemForUser","item","userShoppingListRef","set","deleteItem","remove","loginButton","registerButton","deleteAccountButton","readDataButton","createItemButton","deleteItemButton","outputDiv","data","newItem"],"mappings":"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"}